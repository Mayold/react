{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/okjuszide/Desktop/react/components/Container.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport Section from \"./Section\";\nimport Color from \"./Color\";\nimport Headings from \"./Headings\";\nimport Paragraph from './Paragraph';\nimport Menu from './Menu';\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n    _this.state = {\n      font: 'sans-serif',\n      color: ['rgba( 255, 0, 0, .3 )', 'rgba( 255, 0, 0, .8 )', 'red']\n    };\n    _this.changeFont = _this.changeFont.bind(_assertThisInitialized(_this));\n    _this.changeColor = _this.changeColor.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"changeFont\",\n    value: function changeFont() {\n      this.setState({\n        font: this.state.font == 'serif' ? 'sans-serif' : 'serif'\n      });\n    }\n  }, {\n    key: \"changeColor\",\n    value: function changeColor(e) {\n      switch (e.target.value) {\n        case 'red':\n          this.setState({\n            color: ['rgba( 255, 0, 0, .3 )', 'rgba( 255, 0, 0, .8 )', 'red']\n          });\n          break;\n\n        case 'blue':\n          this.setState({\n            color: ['rgba( 0, 0, 255, .3 )', 'rgba( 0, 0, 255, .8 )', 'blue']\n          });\n          break;\n\n        default:\n          this.setState({\n            color: ['rgba( 255, 0, 0, 0, .3 )', 'rgba( 255, 0, 0, 0, .8 )', 'red']\n          });\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(Menu, {\n        changeFont: this.chagneFont,\n        changeColor: this.changeColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 66\n        },\n        __self: this\n      }), __jsx(Section, {\n        title: \"01.Typography\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 67\n        },\n        __self: this\n      }, __jsx(Headings, {\n        font: this.state.font,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 68\n        },\n        __self: this\n      }), __jsx(Paragraph, {\n        font: this.state.font,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 69\n        },\n        __self: this\n      })), __jsx(Section, {\n        title: \"02.Color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 71\n        },\n        __self: this\n      }, __jsx(Color, {\n        colors: [\"white\", \"rgba(0,0,0, .19)\", \"rgba(0,0,0, .39)\", \"rgba(0,0,0, .59)\", \"rgba(0,0,0, .79)\", \"rgba(0,0,0, .89\", \"black\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 72\n        },\n        __self: this\n      }), __jsx(Color, {\n        colors: this.state.color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 73\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default Container;","map":{"version":3,"sources":["/home/okjuszide/Desktop/react/components/Container.js"],"names":["Component","Section","Color","Headings","Paragraph","Menu","Container","props","state","font","color","changeFont","bind","changeColor","setState","e","target","value","chagneFont"],"mappings":";;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,S;;;;;AAEF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE,YADG;AAETC,MAAAA,KAAK,EAAE,CACH,uBADG,EAEH,uBAFG,EAGH,KAHG;AAFE,KAAb;AASA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,+BAAnB;AAbe;AAclB;;;;iCAEY;AACT,WAAKE,QAAL,CAAc;AACVL,QAAAA,IAAI,EAAG,KAAKD,KAAL,CAAWC,IAAX,IAAmB,OAAnB,GAA6B,YAA7B,GAA4C;AADzC,OAAd;AAGH;;;gCAEWM,C,EAAG;AACX,cAAOA,CAAC,CAACC,MAAF,CAASC,KAAhB;AACI,aAAK,KAAL;AACI,eAAKH,QAAL,CAAc;AACVJ,YAAAA,KAAK,EAAE,CACH,uBADG,EAEH,uBAFG,EAGH,KAHG;AADG,WAAd;AAOJ;;AACA,aAAK,MAAL;AACI,eAAKI,QAAL,CAAc;AACVJ,YAAAA,KAAK,EAAE,CACH,uBADG,EAEH,uBAFG,EAGH,MAHG;AADG,WAAd;AAOJ;;AACA;AACI,eAAKI,QAAL,CAAc;AACVJ,YAAAA,KAAK,EAAE,CACH,0BADG,EAEH,0BAFG,EAGH,KAHG;AADG,WAAd;AApBR;AA4BH;;;6BAEQ;AACL,aACI,4BACA,MAAC,IAAD;AAAM,QAAA,UAAU,EAAE,KAAKQ,UAAvB;AAAmC,QAAA,WAAW,EAAG,KAAKL,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,MAAC,OAAD;AAAS,QAAA,KAAK,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,QAAD;AAAU,QAAA,IAAI,EAAG,KAAKL,KAAL,CAAWC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,MAAC,SAAD;AAAW,QAAA,IAAI,EAAG,KAAKD,KAAL,CAAWC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFA,EAMA,MAAC,OAAD;AAAS,QAAA,KAAK,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,KAAD;AAAO,QAAA,MAAM,EAAE,CAAC,OAAD,EAAU,kBAAV,EAA8B,kBAA9B,EAAkD,kBAAlD,EAAsE,kBAAtE,EAA0F,iBAA1F,EAA6G,OAA7G,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,MAAC,KAAD;AAAO,QAAA,MAAM,EAAG,KAAKD,KAAL,CAAWE,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CANA,CADJ;AAaH;;;;EArEmBV,S;;AAwExB,eAAeM,SAAf","sourcesContent":["import { Component } from 'react'\r\nimport Section from \"./Section\"\r\nimport Color from \"./Color\"\r\nimport Headings from \"./Headings\"\r\nimport Paragraph from './Paragraph'\r\nimport Menu from './Menu'\r\n\r\nclass Container extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            font: 'sans-serif',\r\n            color: [\r\n                'rgba( 255, 0, 0, .3 )',\r\n                'rgba( 255, 0, 0, .8 )',\r\n                'red'\r\n            ]\r\n        }\r\n\r\n        this.changeFont = this.changeFont.bind(this)\r\n        this.changeColor = this.changeColor.bind(this)\r\n    }\r\n\r\n    changeFont() {\r\n        this.setState({\r\n            font: (this.state.font == 'serif' ? 'sans-serif' : 'serif')\r\n        })\r\n    }\r\n\r\n    changeColor(e) {\r\n        switch(e.target.value) {\r\n            case 'red':\r\n                this.setState({\r\n                    color: [\r\n                        'rgba( 255, 0, 0, .3 )',\r\n                        'rgba( 255, 0, 0, .8 )',\r\n                        'red'\r\n                    ]\r\n                })\r\n            break;\r\n            case 'blue': \r\n                this.setState({\r\n                    color: [\r\n                        'rgba( 0, 0, 255, .3 )',\r\n                        'rgba( 0, 0, 255, .8 )',\r\n                        'blue'\r\n                    ]\r\n                })\r\n            break;\r\n            default: \r\n                this.setState({\r\n                    color: [\r\n                        'rgba( 255, 0, 0, 0, .3 )',\r\n                        'rgba( 255, 0, 0, 0, .8 )',\r\n                        'red'\r\n                    ]\r\n                })\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <Menu changeFont={this.chagneFont} changeColor={ this.changeColor }/>\r\n            <Section title=\"01.Typography\">\r\n                <Headings font={ this.state.font } />\r\n                <Paragraph font={ this.state.font }/>\r\n            </Section>\r\n            <Section title=\"02.Color\">\r\n                <Color colors={[\"white\", \"rgba(0,0,0, .19)\", \"rgba(0,0,0, .39)\", \"rgba(0,0,0, .59)\", \"rgba(0,0,0, .79)\", \"rgba(0,0,0, .89\", \"black\"]}/>\r\n                <Color colors={ this.state.color } />\r\n            </Section>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Container"]},"metadata":{},"sourceType":"module"}