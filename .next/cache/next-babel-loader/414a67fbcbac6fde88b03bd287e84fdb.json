{"ast":null,"code":"import _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nvar _jsxFileName = \"/home/okjuszide/Desktop/tipitaptap/react/components/Container.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Component } from 'react';\nimport Section from \"./Section\";\nimport Color from \"./Color\";\nimport Headings from \"./Headings\";\nimport Paragraph from './Paragraph';\nimport Menu from './Menu';\n\nvar Container =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(Container, _Component);\n\n  function Container(props) {\n    var _this;\n\n    _classCallCheck(this, Container);\n\n    _this = _possibleConstructorReturn(this, _getPrototypeOf(Container).call(this, props));\n    _this.state = {\n      font: 'sans-serif'\n    };\n    _this.changeFont = _this.changeFont.bind(_assertThisInitialized(_this));\n    _this.changeColor = _this.changeColor.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  _createClass(Container, [{\n    key: \"changeFont\",\n    value: function changeFont(e) {\n      this.setState({\n        font: e.target[e.target.selectedIndex].value\n      });\n    }\n  }, {\n    key: \"changeColor\",\n    value: function changeColor(e) {\n      var hex = e.target.value.replace('#', '');\n\n      var r = _parseInt(hex.substring(0, 2), 16);\n\n      var g = _parseInt(hex.substring(2, 4), 16);\n\n      var b = _parseInt(hex.substring(4, 6), 16);\n\n      this.setState({\n        color: [\"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", .3)\"), \"rgba(\".concat(r, \", \").concat(g, \", \").concat(b, \", .7)\"), \"rgb(\".concat(r, \", \").concat(g, \", \").concat(b, \")\")]\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      return __jsx(React.Fragment, null, __jsx(Menu, {\n        changeFont: this.changeFont,\n        changeColor: this.changeColor,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 47\n        },\n        __self: this\n      }), __jsx(Section, {\n        title: \"01.Typography\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 48\n        },\n        __self: this\n      }, __jsx(Headings, {\n        font: this.state.font,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 49\n        },\n        __self: this\n      }), __jsx(Paragraph, {\n        font: this.state.font,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 50\n        },\n        __self: this\n      })), __jsx(Section, {\n        title: \"02.Color\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 52\n        },\n        __self: this\n      }, __jsx(Color, {\n        colors: [\"white\", \"rgba(0,0,0, .19)\", \"rgba(0,0,0, .39)\", \"rgba(0,0,0, .59)\", \"rgba(0,0,0, .79)\", \"rgba(0,0,0, .89\", \"black\"],\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 53\n        },\n        __self: this\n      }), __jsx(Color, {\n        colors: this.state.color,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 54\n        },\n        __self: this\n      })));\n    }\n  }]);\n\n  return Container;\n}(Component);\n\nexport default Container;","map":{"version":3,"sources":["/home/okjuszide/Desktop/tipitaptap/react/components/Container.js"],"names":["Component","Section","Color","Headings","Paragraph","Menu","Container","props","state","font","changeFont","bind","changeColor","e","setState","target","selectedIndex","value","hex","replace","r","substring","g","b","color"],"mappings":";;;;;;;;;;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,KAAP,MAAkB,SAAlB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,SAAP,MAAsB,aAAtB;AACA,OAAOC,IAAP,MAAiB,QAAjB;;IAEMC,S;;;;;AAEF,qBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACf,mFAAMA,KAAN;AAEA,UAAKC,KAAL,GAAa;AACTC,MAAAA,IAAI,EAAE;AADG,KAAb;AAKA,UAAKC,UAAL,GAAkB,MAAKA,UAAL,CAAgBC,IAAhB,+BAAlB;AACA,UAAKC,WAAL,GAAmB,MAAKA,WAAL,CAAiBD,IAAjB,+BAAnB;AATe;AAUlB;;;;+BAEUE,C,EAAG;AACV,WAAKC,QAAL,CAAc;AACVL,QAAAA,IAAI,EAAEI,CAAC,CAACE,MAAF,CAASF,CAAC,CAACE,MAAF,CAASC,aAAlB,EAAiCC;AAD7B,OAAd;AAGH;;;gCAEWJ,C,EAAG;AAEX,UAAIK,GAAG,GAAGL,CAAC,CAACE,MAAF,CAASE,KAAT,CAAeE,OAAf,CAAuB,GAAvB,EAA2B,EAA3B,CAAV;;AACA,UAAIC,CAAC,GAAG,UAASF,GAAG,CAACG,SAAJ,CAAc,CAAd,EAAgB,CAAhB,CAAT,EAA6B,EAA7B,CAAR;;AACA,UAAIC,CAAC,GAAG,UAASJ,GAAG,CAACG,SAAJ,CAAc,CAAd,EAAgB,CAAhB,CAAT,EAA6B,EAA7B,CAAR;;AACA,UAAIE,CAAC,GAAG,UAASL,GAAG,CAACG,SAAJ,CAAc,CAAd,EAAgB,CAAhB,CAAT,EAA6B,EAA7B,CAAR;;AAEA,WAAKP,QAAL,CAAc;AACVU,QAAAA,KAAK,EAAE,gBACKJ,CADL,eACWE,CADX,eACiBC,CADjB,2BAEKH,CAFL,eAEWE,CAFX,eAEiBC,CAFjB,0BAGIH,CAHJ,eAGUE,CAHV,eAGgBC,CAHhB;AADG,OAAd;AAOH;;;6BAEQ;AACL,aACI,4BACA,MAAC,IAAD;AAAM,QAAA,UAAU,EAAE,KAAKb,UAAvB;AAAmC,QAAA,WAAW,EAAG,KAAKE,WAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADA,EAEA,MAAC,OAAD;AAAS,QAAA,KAAK,EAAC,eAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,QAAD;AAAU,QAAA,IAAI,EAAG,KAAKJ,KAAL,CAAWC,IAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,MAAC,SAAD;AAAW,QAAA,IAAI,EAAG,KAAKD,KAAL,CAAWC,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CAFA,EAMA,MAAC,OAAD;AAAS,QAAA,KAAK,EAAC,UAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACI,MAAC,KAAD;AAAO,QAAA,MAAM,EAAE,CAAC,OAAD,EAAU,kBAAV,EAA8B,kBAA9B,EAAkD,kBAAlD,EAAsE,kBAAtE,EAA0F,iBAA1F,EAA6G,OAA7G,CAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QADJ,EAEI,MAAC,KAAD;AAAO,QAAA,MAAM,EAAG,KAAKD,KAAL,CAAWgB,KAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAFJ,CANA,CADJ;AAaH;;;;EAlDmBxB,S;;AAqDxB,eAAeM,SAAf","sourcesContent":["import { Component } from 'react'\r\nimport Section from \"./Section\"\r\nimport Color from \"./Color\"\r\nimport Headings from \"./Headings\"\r\nimport Paragraph from './Paragraph'\r\nimport Menu from './Menu'\r\n\r\nclass Container extends Component {\r\n    \r\n    constructor(props) {\r\n        super(props)\r\n\r\n        this.state = {\r\n            font: 'sans-serif',\r\n\r\n        }\r\n\r\n        this.changeFont = this.changeFont.bind(this)\r\n        this.changeColor = this.changeColor.bind(this)\r\n    }\r\n\r\n    changeFont(e) {\r\n        this.setState({\r\n            font: e.target[e.target.selectedIndex].value\r\n        })\r\n    }\r\n\r\n    changeColor(e) {\r\n\r\n        let hex = e.target.value.replace('#','');\r\n        let r = parseInt(hex.substring(0,2), 16);\r\n        let g = parseInt(hex.substring(2,4), 16);\r\n        let b = parseInt(hex.substring(4,6), 16);\r\n            \r\n        this.setState({\r\n            color: [\r\n                `rgba(${r}, ${g}, ${b}, .3)`,\r\n                `rgba(${r}, ${g}, ${b}, .7)`,\r\n                `rgb(${r}, ${g}, ${b})`\r\n            ]\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <Menu changeFont={this.changeFont} changeColor={ this.changeColor }/>\r\n            <Section title=\"01.Typography\">\r\n                <Headings font={ this.state.font } />\r\n                <Paragraph font={ this.state.font }/>\r\n            </Section>\r\n            <Section title=\"02.Color\">\r\n                <Color colors={[\"white\", \"rgba(0,0,0, .19)\", \"rgba(0,0,0, .39)\", \"rgba(0,0,0, .59)\", \"rgba(0,0,0, .79)\", \"rgba(0,0,0, .89\", \"black\"]}/>\r\n                <Color colors={ this.state.color } />\r\n            </Section>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Container"]},"metadata":{},"sourceType":"module"}